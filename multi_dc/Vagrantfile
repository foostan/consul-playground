# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

DC_NUM = 2
IP_BASE = "192.168.33."
BIP_BASE = "10.1."

SERVER_NUM = 3
CLIENT_NUM = 3

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "yungsang/coreos-beta"

  (1..DC_NUM).each do |i|
    hostname = "dc-#{i}"
    ip = "#{IP_BASE}#{i+10}"
    bip = "#{BIP_BASE}#{i+10}"

    config.vm.define vm_name = hostname do |dc|
      dc.vm.hostname = hostname
      dc.vm.network :private_network, ip: ip

      dc.vm.provision :file, preserve_order: true, source: "./docker.service", destination: "/tmp/docker.service"

      dc.vm.provision :shell, preserve_order: true do |sh|
        sh.inline = <<-EOT
          sed -e \'s/%BIP%/#{bip}.1\\/24/g\' -i /tmp/docker.service
          mv /tmp/docker.service /etc/systemd/system/

          systemctl daemon-reload
          systemctl restart docker

          docker ps -q | xargs --no-run-if-empty docker rm
        EOT
      end

      dc.vm.provision :docker, preserve_order: true do |d|
        (1..SERVER_NUM).each do |si|
          if si == 1
            d.run "server#{si}", image: "progrium/consul",
              cmd: "-server -bootstrap-expect #{SERVER_NUM}",
              args: "-h server1.consul.dc#{i}"
          else
            d.run "server#{si}", image: "progrium/consul",
              cmd: "-server -join `docker inspect -f '{{ .NetworkSettings.IPAddress }}' server1`",
              args: "-h server#{si}.consul.dc#{i}"
          end
        end

        (1..CLIENT_NUM).each do |ci|
          d.run "client#{ci}", image: "progrium/consul",
            cmd: "-join `docker inspect -f '{{ .NetworkSettings.IPAddress }}' server1`",
            args: "-h client#{ci}.consul.dc#{i}"
        end

      end
    end
  end
end
